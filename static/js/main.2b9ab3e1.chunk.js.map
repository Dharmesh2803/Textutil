{"version":3,"sources":["components/Home.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","Text","setText","useState","React","createElement","Fragment","className","style","color","mode","htmlFor","id","rows","value","onChange","event","console","log","target","backgroundColor","type","onClick","upCase","toUpperCase","lowCase","toLocaleLowerCase","clear","split","length","Navbar","concat","harf","Title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","toggelMode","App","setMode","showAlert","message","document","body","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2b9ab3e1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nexport default function Home(props) {\r\n  const [Text, setText] = useState(\"\");\r\n\r\n  const upCase = () => {\r\n    setText(Text.toUpperCase());\r\n  };\r\n\r\n  const lowCase = () => {\r\n    setText(Text.toLocaleLowerCase());\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    console.log(\"text chenge\");\r\n    setText(event.target.value);\r\n  };\r\n  const clear = () => {\r\n    setText(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mt-5\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <div className=\"mb-3 \">\r\n          <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">\r\n            <h1>Enter Your Text</h1>\r\n          </label>\r\n          <textarea\r\n            className=\"form-control \"\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"\r\n            value={Text}\r\n            onChange={onChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"grey\", color:props.mode==='light'?'black':'white'\r\n            }}\r\n          ></textarea>\r\n          <button type=\"button\" className=\"btn btn-primary mt-2 \" onClick={upCase}>\r\n            upCase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger mt-2 mx-3 \"\r\n            onClick={lowCase}\r\n          >\r\n            LowCase\r\n          </button>\r\n          <button type=\"button\" className=\"btn btn-dark mt-2 mx-2 \" onClick={clear}>\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container mt-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n        <h4>YourText summary </h4>\r\n        <p>\r\n          {Text.split(\" \").length} words and {Text.length} characters\r\n        </p>\r\n        <p>{0.008 * Text.split(\" \").length} Minute read</p>\r\n        <h4>Preview </h4>\r\n        <p>{Text.length>0?Text:\"Enter somethin to preview it here\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" harf=\"#\">{props.Title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active \" aria-current=\"page\" to='/'>\r\n                  Home\r\n                </Link> */}\r\n                <a className=\"nav-link active \" aria-current=\"page\" harf=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link \" to=\"/about\">\r\n                  About\r\n                </Link> */}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-check form-switch mx-4\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggelMode}/>\r\n          <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\nimport Home from './components/Home'\n// import About from './components/About'\nimport Navbar from './components/Navbar'\n// import Alert from './components/Alert';\n// import { BrowserRouter, Route, Routes } from 'react-router-dom';\n\n\nexport default function App(props) {\n  const [mode,setMode]=useState('light');\n  // const [alert , setAlert]=useState(null);\n\n  const showAlert=(message,type)=>({\n    message:message,\n    type:type\n  })\n\n  const toggelMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark mode has been enabled\",\"success\");\n      document.title=\"home-DarkMode\";\n      \n    }\n   else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"light mode has been enabled\",\"success\")\n      document.title=\"home-LightMode\";\n    }\n  }\n  return (\n    <>\n    {/* <BrowserRouter>\n    <Navbar Title=\"TextUtils\" mode={mode} toggelMode={toggelMode}/>\n    <Alert alert={alert} />\n    <Routes>\n      <Route path='/' element={<Home mode={mode}/>}/>\n      <Route path='/about' element={ <About/>}/>\n    </Routes>\n    </BrowserRouter> */}\n\n    <Navbar Title=\"TextUtils\" mode={mode} toggelMode={toggelMode}/>\n    <Home mode={mode}/>\n    </>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}